{"version":3,"sources":["logoVeterinary.png","components/Header.js","components/NewAppointment.js","components/Appointment.js","components/ListAppointments.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","title","className","stateInitial","appointment","pet","owner","date","time","symptoms","error","NewAppointment","state","handleChance","e","setState","target","name","value","handleSubmit","preventDefault","newAppointment","id","uuid","props","createNewAppointment","this","type","placeholder","onChange","rows","maxLength","onClick","Component","Appointment","deleteAppointment","ListAppointments","appointments","message","Object","keys","length","map","key","prototype","PropTypes","array","isRequired","func","App","data","console","log","filter","appointmentsLS","localStorage","getItem","JSON","parse","setItem","stringify","src","logoVeterinary","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d870b57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoVeterinary.e6bfa6f0.png\";","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nconst Header = ({title}) => (  \n    <header className='text-center'>\n        <h1>\n            {title}\n        </h1>\n        <p>Web application for the creation and management of appointments in a veterinary.<br/>Fill out the form and view the agenda.</p>\n    </header>\n);\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types'\n\nconst stateInitial = {\n    appointment: {\n        pet: '',\n        owner: '',\n        date: '',\n        time: '',\n        symptoms: ''\n    },\n    error: false\n}\n\nclass NewAppointment extends Component {\n    state = { ...stateInitial }\n\n    handleChance = e => {\n        this.setState({\n            appointment: {\n                ...this.state.appointment, [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { pet, owner, date, time, symptoms } = this.state.appointment;\n        if (pet === '' || owner === '' || date === '' || time === '' || symptoms === '') {\n            this.setState({\n                error: true\n            })\n        } else {\n            // created new Appointment with ID and up to App\n            const newAppointment = { ...this.state.appointment };\n            newAppointment.id = uuid();\n            this.props.createNewAppointment(newAppointment);\n            //reset state (form)\n            this.setState({\n                ...stateInitial\n            })\n        }\n    }\n\n    render() {\n        const { error } = this.state;\n        return (\n            <div className='form-new-appointment'>\n                <h2 className='mb-4'>\n                    Fill in the form to create a new appointment\n                </h2>\n                {error ? <div className='alert alert-danger text-center mt-2 mb-4'>\n                    All fields are required\n                </div> : null}\n                <form>\n                    <div className='form-group row'>\n                        <label className='col-sm-4 col-lg-3 col-form-label'>Pet Name:</label>\n                        <div className='col-sm-8 col-lg-9'>\n                            <input\n                                type='text'\n                                className='form-control'\n                                placeholder='name'\n                                name='pet'\n                                onChange={this.handleChance}\n                                value={this.state.appointment.pet}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group row'>\n                        <label className='col-sm-4 col-lg-3 col-form-label'> Owner Name:</label>\n                        <div className='col-sm-8 col-lg-9'>\n                            <input\n                                type='text'\n                                className='form-control'\n                                placeholder='name'\n                                name='owner'\n                                onChange={this.handleChance}\n                                value={this.state.appointment.owner}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group row'>\n                        <label className='col-sm-4 col-lg-1 col-form-label'> Date:</label>\n                        <div className='col-sm-8 col-lg-5'>\n                            <input\n                                type='date'\n                                className='form-control'\n                                name='date'\n                                onChange={this.handleChance}\n                                value={this.state.appointment.date}\n                            />\n                        </div>\n\n                        <label className='col-sm-4 col-lg-1 col-form-label'> Time:</label>\n                        <div className='col-sm-8 col-lg-5'>\n                            <input\n                                type='time'\n                                className='form-control'\n                                name='time'\n                                onChange={this.handleChance}\n                                value={this.state.appointment.time}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='form-group row'>\n                        <label className='col-sm-4 col-lg-12 col-form-label'> Symptoms:</label>\n                        <div className='col-sm-8 col-lg-12'>\n                            <textarea\n                                rows=\"4\"\n                                className='form-control'\n                                name='symptoms'\n                                onChange={this.handleChance}\n                                value={this.state.appointment.symptoms}\n                                maxLength='250'>\n\n                            </textarea>\n                        </div>\n                    </div>\n\n                    <div className=\"row justify-content-center mt-3\">\n                        <button onClick={this.handleSubmit} className='btn btn-success' type='button'>new appointment</button>\n                    </div>\n                </form>\n\n            </div>\n        );\n    }\n}\n\nNewAppointment.propTypes = {\n    createNewAppointment: PropTypes.func.isRequired\n}\n\nexport default NewAppointment;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst Appointment = ({ appointment, deleteAppointment }) => (\n    <div className='card mb-3'>\n        <h6 className='card-header'>{appointment.pet}</h6>\n        <div className='card-body row'>\n            <p className='card-text col-lg-4'><span>Date: </span>{appointment.date}</p>\n            <p className='card-text col-lg-4'><span>Time: </span>{appointment.time}</p>\n            <p className='card-text col-lg-4'><span>Owner Name: </span>{appointment.owner}</p>\n            <p className='card-text col-lg-12'><span>Symptoms: </span>{appointment.symptoms}</p>\n\n            <div className='btns col-lg-12 text-right'>\n                <button\n                    className='btn btn-danger text-center'\n                    onClick={() => deleteAppointment(appointment.id)}>\n                    Deleted\n        </button>\n            </div>\n        </div>\n    </div>\n)\n\nAppointment.propTypes={\n    appointment: PropTypes.object.isRequired,\n    deleteAppointment: PropTypes.func.isRequired,\n\n}\n\nexport default Appointment;\n\n","import React from 'react';\nimport Appointment from './Appointment';\nimport PropTypes from 'prop-types'\n\n\nconst ListAppointments = ({ appointments, deleteAppointment }) => {\n\n    const message = Object.keys(appointments).length === 0 ? 'There are no appointments' : 'Manage appointments here'\n\n    return (\n        <div className=''>\n            <h2 className='mb-4'>{message}</h2>\n    \n            <div className='list-appointments'>\n                {appointments.map(appointment => (\n                    < Appointment\n                        key={appointment.id}\n                        appointment={appointment}\n                        deleteAppointment={deleteAppointment}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nListAppointments.prototype = {\n    appointments: PropTypes.array.isRequired,\n    deleteAppointment: PropTypes.func.isRequired\n}\n\nexport default ListAppointments;\n\n","import React, { Component } from 'react';\nimport './bootstrap.min.css';\nimport Header from './components/Header'\nimport NewAppointment from './components/NewAppointment'\nimport ListAppointments from './components/ListAppointments'\nimport logoVeterinary from './logoVeterinary.png'\n\n\nclass App extends Component {\n  state = {\n    appointments: []\n  }\n\n  componentDidMount() {\n    const appointmentsLS = localStorage.getItem('appointments')\n\n    if (appointmentsLS) {\n      this.setState({\n        appointments: JSON.parse(appointmentsLS)\n      })\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('appointments', JSON.stringify(this.state.appointments))\n  }\n\n  createNewAppointment = data => {\n    const appointments = [...this.state.appointments, data];\n\n    this.setState({\n      appointments: appointments\n    }, () => console.log(this.state))\n  }\n\n  deleteAppointment = id => {\n    const currentAppointments = [...this.state.appointments];\n\n    const appointments = currentAppointments.filter(appointment => appointment.id !== id)\n\n    this.setState({\n      appointments: appointments\n    })\n\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <div className='container container-header'>\n          <Header\n            title='Veterinary Patient Manager'>\n          </Header>\n        </div>\n\n        <main>\n          <div className='container container-form'>\n            <div className='row pb-5'>\n              <div className='col-md-7'>\n                <NewAppointment\n                  createNewAppointment={this.createNewAppointment} />\n              </div>\n              <div className='col-md-5'>\n                <img src={logoVeterinary} className=' logoHome img-fluid' alt='logo Veterinary'></img>\n              </div>\n            </div>\n          </div>\n          <div className='management-appointments'>\n            <div className='container'>\n              <div className='row py-5'>\n                <div className='col-md-12'>\n                  <ListAppointments\n                    appointments={this.state.appointments}\n                    deleteAppointment={this.deleteAppointment} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n        <footer className='text-center py-4'>\n          <p className='m-0'>Beatriz García ©2019.</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}